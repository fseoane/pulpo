14:47:11 [INFO] Reading config from:            /etc/pulpo.conf
14:47:11 [INFO] ------------------------------------------------------------------------
14:47:11 [INFO] Configuration file is (/etc/pulpo.conf) : 
14:47:11 [INFO]     config/tray_icon:           /opt/pulpo/resources/pulpo-white-64x64.png
14:47:11 [INFO]     gotify/gotify_url:          https://yecla.mooo.com:20589/
14:47:11 [INFO]     gotify/gotify_client_token: CCX6GtJPVh_osXB
14:47:11 [INFO]     gotify/gotify_sound:        gotify-notification.ogg
14:47:11 [INFO]     gotify/gotify_icon:         gotify-icon.png
14:47:11 [INFO]     ntfy/ntfy_url:              https://yecla.mooo.com:20590/
14:47:11 [INFO]     ntfy/ntfy_topics:           Alerts,Backup,General,Deployment,MediaClassifier
14:47:11 [INFO]     ntfy/ntfy_sound:            ntfy-bell-hop-bell.ogg
14:47:11 [INFO]     ntfy/ntfy_icon:             ntfy-icon.png
14:47:11 [INFO] ------------------------------------------------------------------------
14:47:11 [INFO]  
14:47:11 [INFO] Waiting for network connection.
14:47:11 [INFO] Network is available.
14:47:11 [INFO] Starting gotify with https://yecla.mooo.com:20589/ and token CCX6GtJPVh_osXB
14:47:11 [INFO] Starting ntfy with https://yecla.mooo.com:20590/ and topics Alerts,Backup,General,Deployment,MediaClassifier
14:47:11 [INFO] ...and will poll every 5 seconds
14:47:11 [INFO] Creating ntfy client
14:47:11 [INFO] ...and will poll every 5 seconds
14:47:11 [INFO] Creating gotify client
14:47:11 [INFO] Starting gotify loop
14:47:11 [INFO] Starting ntfy loop
14:47:11 [INFO] Gotify websocket url: wss://yecla.mooo.com:20589/stream?token=CCX6GtJPVh_osXB
14:47:11 [INFO] Ntfy websocket url: wss://yecla.mooo.com:20590/Alerts,Backup,General,Deployment,MediaClassifier/ws
14:47:11 [INFO] Connected to Ntfy at wss://yecla.mooo.com:20590/
14:47:11 [INFO] Connected to Gotify at wss://yecla.mooo.com:20589/
14:47:21 [INFO] [âœ‰] Gotify message received | title:my title message:my message asdasd asd asd asd asd as dasdasd asdasd  asd as d asd asd sd asd asdmy message
14:47:21 [INFO]     DND:           off
14:47:21 [INFO]     SILENT:        off
14:47:22 [INFO] perform;
14:47:22 [INFO] write_command; command=Auth(Some(External), Some([49, 48, 48, 48]))
14:47:22 [INFO] read_command;
14:47:22 [INFO] write_command; command=NegotiateUnixFD
14:47:22 [INFO] read_command;
14:47:22 [INFO] write_command; command=Begin
14:47:22 [INFO] socket reader;
14:47:22 [INFO] read_socket; self=SocketReader { socket: Async { source: Source { registration: 42, key: 0, state: Mutex { data: [Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }, Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }], poisoned: false, .. } }, io: Some(UnixStream { fd: FileDesc(OwnedFd { fd: 42 }), local: (unnamed), peer: "/run/user/1000/bus" (pathname) }) }, senders: Mutex { data: {None: Sender { inner: RwLock { data: Inner { queue: [], capacity: 64, receiver_count: 0, inactive_receiver_count: 1, sender_count: 1, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event(<uninitialized>) }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(Error), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [], capacity: 8, receiver_count: 1, inactive_receiver_count: 1, sender_count: 2, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 0, listeners_total: 1 } }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(MethodReturn), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [], capacity: 8, receiver_count: 1, inactive_receiver_count: 1, sender_count: 2, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 0, listeners_total: 1 } }, poisoned: false, .. } }} }, already_received_bytes: Some([]), prev_seq: 0, activity_event: Event(<uninitialized>) }
14:47:22 [INFO] read_socket; self=SocketReader { socket: Async { source: Source { registration: 42, key: 0, state: Mutex { data: [Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }, Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }], poisoned: false, .. } }, io: Some(UnixStream { fd: FileDesc(OwnedFd { fd: 42 }), local: (unnamed), peer: "/run/user/1000/bus" (pathname) }) }, senders: Mutex { data: {None: Sender { inner: RwLock { data: Inner { queue: [], capacity: 64, receiver_count: 0, inactive_receiver_count: 1, sender_count: 1, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event(<uninitialized>) }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(Error), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [(Ok(Msg { type: MethodReturn, sender: UniqueName("org.freedesktop.DBus"), reply-serial: 1, body: Signature("s"), fds: [] }), 1)], capacity: 8, receiver_count: 1, inactive_receiver_count: 1, sender_count: 2, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 1 } }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(MethodReturn), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [(Ok(Msg { type: MethodReturn, sender: UniqueName("org.freedesktop.DBus"), reply-serial: 1, body: Signature("s"), fds: [] }), 1)], capacity: 8, receiver_count: 1, inactive_receiver_count: 1, sender_count: 2, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 1 } }, poisoned: false, .. } }} }, already_received_bytes: None, prev_seq: 1, activity_event: Event(<uninitialized>) }
14:47:22 [INFO] read_socket; self=SocketReader { socket: Async { source: Source { registration: 42, key: 0, state: Mutex { data: [Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }, Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }], poisoned: false, .. } }, io: Some(UnixStream { fd: FileDesc(OwnedFd { fd: 42 }), local: (unnamed), peer: "/run/user/1000/bus" (pathname) }) }, senders: Mutex { data: {None: Sender { inner: RwLock { data: Inner { queue: [], capacity: 64, receiver_count: 0, inactive_receiver_count: 1, sender_count: 1, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event(<uninitialized>) }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(Error), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [(Ok(Msg { type: MethodReturn, sender: UniqueName("org.freedesktop.DBus"), reply-serial: 1, body: Signature("s"), fds: [] }), 1)], capacity: 8, receiver_count: 1, inactive_receiver_count: 1, sender_count: 2, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 1 } }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(MethodReturn), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [(Ok(Msg { type: MethodReturn, sender: UniqueName("org.freedesktop.DBus"), reply-serial: 1, body: Signature("s"), fds: [] }), 1)], capacity: 8, receiver_count: 1, inactive_receiver_count: 1, sender_count: 2, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 1 } }, poisoned: false, .. } }} }, already_received_bytes: None, prev_seq: 2, activity_event: Event(<uninitialized>) }
14:47:22 [INFO] read_socket; self=SocketReader { socket: Async { source: Source { registration: 42, key: 0, state: Mutex { data: [Direction { tick: 1, ticks: Some((1, 0)), waker: None, wakers: Slab { len: 0, cap: 0 } }, Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }], poisoned: false, .. } }, io: Some(UnixStream { fd: FileDesc(OwnedFd { fd: 42 }), local: (unnamed), peer: "/run/user/1000/bus" (pathname) }) }, senders: Mutex { data: {None: Sender { inner: RwLock { data: Inner { queue: [], capacity: 64, receiver_count: 0, inactive_receiver_count: 1, sender_count: 1, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event(<uninitialized>) }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(Error), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [], capacity: 8, receiver_count: 0, inactive_receiver_count: 1, sender_count: 2, head_pos: 2, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 0 } }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(MethodReturn), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [], capacity: 8, receiver_count: 0, inactive_receiver_count: 1, sender_count: 2, head_pos: 2, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 0 } }, poisoned: false, .. } }} }, already_received_bytes: None, prev_seq: 3, activity_event: Event(<uninitialized>) }
14:47:22 [INFO] [âœ‰] Sent gotify desktop notification: title: my title message: my message asdasd asd asd asd asd as dasdasd asdasd  asd as d asd asd sd asd asdmy message
14:47:34 [INFO] [âœ‰]Ntfy message received | title:Alerts/este es el titulo message:este es el texto del mensaje.
14:47:34 [INFO]     DND:           off
14:47:34 [INFO]     SILENT:        off
14:47:36 [INFO] perform;
14:47:36 [INFO] write_command; command=Auth(Some(External), Some([49, 48, 48, 48]))
14:47:36 [INFO] read_command;
14:47:36 [INFO] write_command; command=NegotiateUnixFD
14:47:36 [INFO] read_command;
14:47:36 [INFO] write_command; command=Begin
14:47:36 [INFO] socket reader;
14:47:36 [INFO] read_socket; self=SocketReader { socket: Async { source: Source { registration: 56, key: 1, state: Mutex { data: [Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }, Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }], poisoned: false, .. } }, io: Some(UnixStream { fd: FileDesc(OwnedFd { fd: 56 }), local: (unnamed), peer: "/run/user/1000/bus" (pathname) }) }, senders: Mutex { data: {Some(OwnedMatchRule(MatchRule { msg_type: Some(Error), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [], capacity: 8, receiver_count: 1, inactive_receiver_count: 1, sender_count: 2, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 0, listeners_total: 1 } }, poisoned: false, .. } }, None: Sender { inner: RwLock { data: Inner { queue: [], capacity: 64, receiver_count: 0, inactive_receiver_count: 1, sender_count: 1, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event(<uninitialized>) }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(MethodReturn), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [], capacity: 8, receiver_count: 1, inactive_receiver_count: 1, sender_count: 2, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 0, listeners_total: 1 } }, poisoned: false, .. } }} }, already_received_bytes: Some([]), prev_seq: 0, activity_event: Event(<uninitialized>) }
14:47:36 [INFO] read_socket; self=SocketReader { socket: Async { source: Source { registration: 56, key: 1, state: Mutex { data: [Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }, Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }], poisoned: false, .. } }, io: Some(UnixStream { fd: FileDesc(OwnedFd { fd: 56 }), local: (unnamed), peer: "/run/user/1000/bus" (pathname) }) }, senders: Mutex { data: {Some(OwnedMatchRule(MatchRule { msg_type: Some(Error), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [(Ok(Msg { type: MethodReturn, sender: UniqueName("org.freedesktop.DBus"), reply-serial: 3, body: Signature("s"), fds: [] }), 1)], capacity: 8, receiver_count: 1, inactive_receiver_count: 1, sender_count: 2, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 1 } }, poisoned: false, .. } }, None: Sender { inner: RwLock { data: Inner { queue: [], capacity: 64, receiver_count: 0, inactive_receiver_count: 1, sender_count: 1, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event(<uninitialized>) }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(MethodReturn), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [(Ok(Msg { type: MethodReturn, sender: UniqueName("org.freedesktop.DBus"), reply-serial: 3, body: Signature("s"), fds: [] }), 1)], capacity: 8, receiver_count: 1, inactive_receiver_count: 1, sender_count: 2, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 1 } }, poisoned: false, .. } }} }, already_received_bytes: None, prev_seq: 1, activity_event: Event(<uninitialized>) }
14:47:36 [INFO] read_socket; self=SocketReader { socket: Async { source: Source { registration: 56, key: 1, state: Mutex { data: [Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }, Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }], poisoned: false, .. } }, io: Some(UnixStream { fd: FileDesc(OwnedFd { fd: 56 }), local: (unnamed), peer: "/run/user/1000/bus" (pathname) }) }, senders: Mutex { data: {Some(OwnedMatchRule(MatchRule { msg_type: Some(Error), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [(Ok(Msg { type: MethodReturn, sender: UniqueName("org.freedesktop.DBus"), reply-serial: 3, body: Signature("s"), fds: [] }), 1)], capacity: 8, receiver_count: 1, inactive_receiver_count: 1, sender_count: 2, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 1 } }, poisoned: false, .. } }, None: Sender { inner: RwLock { data: Inner { queue: [], capacity: 64, receiver_count: 0, inactive_receiver_count: 1, sender_count: 1, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event(<uninitialized>) }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(MethodReturn), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [(Ok(Msg { type: MethodReturn, sender: UniqueName("org.freedesktop.DBus"), reply-serial: 3, body: Signature("s"), fds: [] }), 1)], capacity: 8, receiver_count: 1, inactive_receiver_count: 1, sender_count: 2, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 1 } }, poisoned: false, .. } }} }, already_received_bytes: None, prev_seq: 2, activity_event: Event(<uninitialized>) }
14:47:36 [INFO] read_socket; self=SocketReader { socket: Async { source: Source { registration: 56, key: 1, state: Mutex { data: [Direction { tick: 2, ticks: Some((2, 0)), waker: None, wakers: Slab { len: 0, cap: 0 } }, Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }], poisoned: false, .. } }, io: Some(UnixStream { fd: FileDesc(OwnedFd { fd: 56 }), local: (unnamed), peer: "/run/user/1000/bus" (pathname) }) }, senders: Mutex { data: {Some(OwnedMatchRule(MatchRule { msg_type: Some(Error), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [], capacity: 8, receiver_count: 0, inactive_receiver_count: 1, sender_count: 2, head_pos: 2, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 0 } }, poisoned: false, .. } }, None: Sender { inner: RwLock { data: Inner { queue: [], capacity: 64, receiver_count: 0, inactive_receiver_count: 1, sender_count: 1, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event(<uninitialized>) }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(MethodReturn), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [], capacity: 8, receiver_count: 0, inactive_receiver_count: 1, sender_count: 2, head_pos: 2, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 0 } }, poisoned: false, .. } }} }, already_received_bytes: None, prev_seq: 3, activity_event: Event(<uninitialized>) }
14:47:36 [INFO] [âœ‰] Sent Ntfy desktop notification: title: Alerts:este es el titulo message: este es el texto del mensaje.
14:49:08 [INFO] read_socket; self=SocketReader { socket: Async { source: Source { registration: 56, key: 1, state: Mutex { data: [Direction { tick: 3, ticks: Some((3, 2)), waker: None, wakers: Slab { len: 0, cap: 0 } }, Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }], poisoned: false, .. } }, io: Some(UnixStream { fd: FileDesc(OwnedFd { fd: 56 }), local: (unnamed), peer: "/run/user/1000/bus" (pathname) }) }, senders: Mutex { data: {Some(OwnedMatchRule(MatchRule { msg_type: Some(Error), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [], capacity: 8, receiver_count: 0, inactive_receiver_count: 1, sender_count: 2, head_pos: 2, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 0 } }, poisoned: false, .. } }, None: Sender { inner: RwLock { data: Inner { queue: [], capacity: 64, receiver_count: 0, inactive_receiver_count: 1, sender_count: 1, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event(<uninitialized>) }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(MethodReturn), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [], capacity: 8, receiver_count: 0, inactive_receiver_count: 1, sender_count: 2, head_pos: 2, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 0 } }, poisoned: false, .. } }} }, already_received_bytes: None, prev_seq: 4, activity_event: Event(<uninitialized>) }
14:49:09 [INFO] read_socket; self=SocketReader { socket: Async { source: Source { registration: 42, key: 0, state: Mutex { data: [Direction { tick: 4, ticks: Some((2, 1)), waker: None, wakers: Slab { len: 0, cap: 0 } }, Direction { tick: 0, ticks: None, waker: None, wakers: Slab { len: 0, cap: 0 } }], poisoned: false, .. } }, io: Some(UnixStream { fd: FileDesc(OwnedFd { fd: 42 }), local: (unnamed), peer: "/run/user/1000/bus" (pathname) }) }, senders: Mutex { data: {None: Sender { inner: RwLock { data: Inner { queue: [], capacity: 64, receiver_count: 0, inactive_receiver_count: 1, sender_count: 1, head_pos: 0, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event(<uninitialized>) }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(Error), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [], capacity: 8, receiver_count: 0, inactive_receiver_count: 1, sender_count: 2, head_pos: 2, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 0 } }, poisoned: false, .. } }, Some(OwnedMatchRule(MatchRule { msg_type: Some(MethodReturn), sender: None, interface: None, member: None, path_spec: None, destination: None, args: [], arg_paths: [], arg0ns: None })): Sender { inner: RwLock { data: Inner { queue: [], capacity: 8, receiver_count: 0, inactive_receiver_count: 1, sender_count: 2, head_pos: 2, overflow: false, await_active: false, is_closed: false, send_ops: Event(<uninitialized>), recv_ops: Event { listeners_notified: 18446744073709551615, listeners_total: 0 } }, poisoned: false, .. } }} }, already_received_bytes: None, prev_seq: 4, activity_event: Event(<uninitialized>) }
